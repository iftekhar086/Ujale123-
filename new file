
import React, {useEffect, useState} from 'react';
import { AiOutlineDelete} from 'react-icons/ai';
import { AiOutlineCheck} from 'react-icons/ai';







export default function App() {
  const [isCompleteScreen,setIsCompleteScreen] =useState(false);
  const [allTodos,setAllTodos] = useState([]);
  const[newTitle,setNewTitle] = useState('');
  const[newDescription, setNewDescription] = useState('');
  const [CompletedTodos,setCompletedTodos] = useState([]);


const handleAddTodo =()=>{
let newTodoItem ={
  title:newTitle,
  description:newDescription
}
let updatedTodoArr =[...allTodos];
updatedTodoArr.push(newTodoItem);
setAllTodos(updatedTodoArr);
localStorage.setItem('todolist',JSON.stringify(updatedTodoArr))
}
const handleDeleteTodo=(index)=>{
let reducedTodo =[...allTodos];
reducedTodo.splice(index);

localStorage.setItem('todolist',JSON.stringify(reducedTodo));
setAllTodos(reducedTodo)
}
const handleComplete =(index)=>{
  let now = new Date();
  let dd = now.getDate();
  let mm = now.getMonth() + 1;
  let yyyy = now.getFullYear();
  let h = now.getHours();
  let m = now.getMinutes();
  let s = now.getSeconds();
  let CompletedOn = dd + '-' + mm + '-' + yyyy + ' at ' + h + ':' + m +':'+ s;

  let filteredItem = {
       ...allTodos[index],
       CompletedOn:CompletedOn
  }
  let updatedCompletedArr = [...CompletedTodos];
  updatedCompletedArr.push(filteredItem);
  setCompletedTodos(updatedCompletedArr);
  handleDeleteTodo(index)
  localStorage.setItem('completedTodos',JSON.stringify(updatedCompletedArr));
}
const handleDeleteCompletedTodo=(index)=>{
let reducedTodo = [...CompletedTodos]
reducedTodo.splice(index);

localStorage.setItem('CompletedTodos',JSON.stringify(reducedTodo));
setCompletedTodos(reducedTodo);
}

useEffect(()=>{
  let savedTodo = JSON.parse(localStorage.getItem('todolist'));
  let savedCompletedTodo = JSON.parse(localStorage.getItem('completedTodos'));
  
  if(savedTodo){
    setAllTodos(savedTodo);
  }
  if(savedCompletedTodo){
   setCompletedTodos(savedCompletedTodo);
  }
  


}, [])


  return (
   <div className='App'>
     <h1>My Todos</h1>
     <div className='todo-work'>
       <div className='todo-input'>
         <div className='todo-input-item'>
           <label>Titles</label>
           <input type='text' value={newTitle} onChange={(e)=>setNewTitle(e.target.value)} placeholder='Whats the task titles?'/>
         </div>
         <div className='todo-input-item'>
           <label>Description</label>
           <input type='text'  value={newDescription} onChange={(e)=>setNewDescription(e.target.value)} placeholder='Whats the task discription?'/>
         </div>
         <div className='todo-input-item'>
           <button type='button' onClick={handleAddTodo} className='primaryBtn'>Add</button>
         </div>
       </div>
       <div className='btn-area'>
         <button className={`secondaryBtn ${isCompleteScreen===false && 'active'}`} onClick={()=>setIsCompleteScreen(false)}>Todo</button>
         <button className={`secondaryBtn ${isCompleteScreen===true && 'active'}`} onClick={()=>setIsCompleteScreen(true)}>Completed</button>
       </div>
       <div className='todo-list'>
         
        {isCompleteScreen===false && allTodos.map((item,index)=>{
          return(
            <div className='todo-list-item' key={index}>
         <div>
          <h3>{item.title}</h3> 
           <p>{item.description}</p>
           </div>
           <div>
           <AiOutlineDelete className='icon' onClick={()=>handleDeleteTodo(index)} title='Do you want to delete it?'/>
           <AiOutlineCheck className='check-icon' onClick={()=>handleComplete(index)} title='Complete it?'/>
         </div>
        </div>
          )
        })}
         
        {isCompleteScreen===true  && CompletedTodos.map((item,index)=>{
          return(
            <div className='todo-list-item' key={index}>
         <div>
          <h3>{item.title}</h3> 
           <p>{item.description}</p>
           <p><small> Completed On: {item.CompletedOn}</small></p>
           </div>
           <div>
           <AiOutlineDelete className='icon' onClick={()=>handleDeleteCompletedTodo(index)} title='Delete it?'/>
         </div>
        </div>
          )
        })}
        
       </div>
     </div>
   </div>

  )
}
